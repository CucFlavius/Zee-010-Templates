//------------------------------------------------
// DETL - Unknown
// This section only applies to versions â‰¥ SL (9.0.1.34365).
//------------------------------------------------

typedef ushort PackedFloat <read=ReadPackedFloat, write=WritePackedFloat>;

struct DetailLight
{
    ushort flags;
    hfloat unk0;
    hfloat unk1;
    //PackedFloat unk0;
    //PackedFloat unk1;
    ushort unk;
    uint unk;
};



struct DETL(int count)
{
    CHUNK hdr;
    local long pos = FTell();
    DetailLight detail[count];
    

    FSeek(pos + hdr.size);
};

string ReadPackedFloat( PackedFloat a1 )
{
    string s;   

    uint v1;
    int v2;
    uint v3;
    int v4;
    float result;
    v1 = a1;
    v2 = a1 & 0x3FF;
    v3 = (a1 << 16) & 0x80000000;
    v4 = (v1 >> 10) & 0x1F;
    if (v4 == 31)
    {
        result = v3 | ((v2 | 0x3FC00) << 13);
    }
    else if (v4)
    {
        result = v3 | ((v2 | ((v4 + 112) << 10)) << 13);
    }
    else
    {
        if (v2)
        {
            v4 = 113;
            /*
            do
            {
                v2 *= 2;
                --v4;
            }
            while (!_bittest(&v2, 0xAu));
            */
            v2 &= 0x3FFu;
        }
        result = v3 | ((v2 | (v4 << 10)) << 13);
    }

    SPrintf( s, "%f", result );
    return s;
}

   void WritePackedFloat( PackedFloat &f, string s )
    {
        f = (PackedFloat)( Atof( s ) * 256 );
    }

