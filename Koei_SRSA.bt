//------------------------------------------------
//--- 010 Editor v13.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

#include "Lib/Common.bt"

//----------------------------------------------------------------------//
//      Chunk Tools                                                     //
//----------------------------------------------------------------------//

struct GChunk
{
    char ID[4];
    char version[4];
    uint size;
};

int matchGChunk(char m[])
{
    local char s[] = ReadString( FTell());
    if (Strlen(s) < 4) return 0;
    if( m[0] == s[3] && m[1] == s[2] && m[2] == s[1] && m[3] == s[0] ) 
        return 1;
    return 0;
}

typedef struct
{
    GChunk chunk;
    FSeek(FTell() + chunk.size - 12);
    Printf("Skipping Chunk %c%c%c%c", chunk.ID[3], chunk.ID[2], chunk.ID[1], chunk.ID[0]);
} SKIPGChunk <name = SkipGChunkName>;

string SkipGChunkName(SKIPGChunk &str)
{
    if (Strlen(str.chunk.ID) > 0)
    {
        return ("Skip : " + str.chunk.ID[3] + str.chunk.ID[2] + str.chunk.ID[1] + str.chunk.ID[0]);
    }
    else
    {
        return "";
    }
}


//----------------------------------------------------------------------//
//      Structures                                                      //
//----------------------------------------------------------------------//

struct Header
{
    char magic[4];
    uint unk0;
    uint size;
    uint unk1;
};

Header resourceHeader<bgcolor=cRed>;

char chunkMagic[4];
int test[20];